services:
#  application:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    image: spring-webmvc-kotlin
#    container_name: spring-webmvc-kotlin
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#    networks:
#      - application-network
#    depends_on:
#      - postgres
#      - redis

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: my_db
      POSTGRES_USER: my_user
      POSTGRES_PASSWORD: my_password
    ports:
      - "5432:5432"
    networks:
      - application-network

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - application-network

  mongo:
    container_name: mongo
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - application-network

  localstack:
    container_name: localstack
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
      - AWS_ACCESS_KEY_ID=accessKey
      - AWS_SECRET_ACCESS_KEY=secretKey
      - DEFAULT_REGION=ap-northeast-2
    volumes:
      - ./init-localstack.sh:/etc/localstack/init/ready.d/init.sh
    networks:
      - application-network

#  zookeeper:
#    container_name: zookeeper
#    image: confluentinc/cp-zookeeper:7.6.0
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#
#  kafka:
#    container_name: kafka
#    image: confluentinc/cp-kafka:7.6.0
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    depends_on:
#      - zookeeper

networks:
  application-network:
    name: application-network